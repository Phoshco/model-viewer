"use strict";(self.webpackChunkmodel_viewer=self.webpackChunkmodel_viewer||[]).push([[5608],{5608:(t,e,r)=>{r.r(e),r.d(e,{_HDRTextureLoader:()=>s});var a=r(9923);class n{static ConvertPanoramaToCubemap(t,e,r,a,n=!1){if(!t)throw"ConvertPanoramaToCubemap: input cannot be null";if(t.length!=e*r*3)throw"ConvertPanoramaToCubemap: input size is wrong";return{front:this.CreateCubemapTexture(a,this.FACE_FRONT,t,e,r,n),back:this.CreateCubemapTexture(a,this.FACE_BACK,t,e,r,n),left:this.CreateCubemapTexture(a,this.FACE_LEFT,t,e,r,n),right:this.CreateCubemapTexture(a,this.FACE_RIGHT,t,e,r,n),up:this.CreateCubemapTexture(a,this.FACE_UP,t,e,r,n),down:this.CreateCubemapTexture(a,this.FACE_DOWN,t,e,r,n),size:a,type:1,format:4,gammaSpace:!1}}static CreateCubemapTexture(t,e,r,a,n,o=!1){const h=new ArrayBuffer(t*t*4*3),i=new Float32Array(h),s=o?Math.max(1,Math.round(a/4/t)):1,w=1/s,u=w*w,f=e[1].subtract(e[0]).scale(w/t),l=e[3].subtract(e[2]).scale(w/t),c=1/t;let d=0;for(let o=0;o<t;o++)for(let h=0;h<s;h++){let h=e[0],C=e[2];for(let e=0;e<t;e++)for(let w=0;w<s;w++){const s=C.subtract(h).scale(d).add(h);s.normalize();const w=this.CalcProjectionSpherical(s,r,a,n);i[o*t*3+3*e+0]+=w.r*u,i[o*t*3+3*e+1]+=w.g*u,i[o*t*3+3*e+2]+=w.b*u,h=h.add(f),C=C.add(l)}d+=c*w}return i}static CalcProjectionSpherical(t,e,r,a){let n=Math.atan2(t.z,t.x);const o=Math.acos(t.y);for(;n<-Math.PI;)n+=2*Math.PI;for(;n>Math.PI;)n-=2*Math.PI;let h=n/Math.PI;const i=o/Math.PI;h=.5*h+.5;let s=Math.round(h*r);s<0?s=0:s>=r&&(s=r-1);let w=Math.round(i*a);w<0?w=0:w>=a&&(w=a-1);const u=a-w-1;return{r:e[u*r*3+3*s+0],g:e[u*r*3+3*s+1],b:e[u*r*3+3*s+2]}}}function o(t,e,r,a,n,o){n>0?(n=function(t,e){return e>1023?1*Math.pow(2,1023)*Math.pow(2,e-1023):e<-1074?1*Math.pow(2,-1074)*Math.pow(2,e+1074):1*Math.pow(2,e)}(0,n-136),t[o+0]=e*n,t[o+1]=r*n,t[o+2]=a*n):(t[o+0]=0,t[o+1]=0,t[o+2]=0)}function h(t,e){let r="",a="";for(let n=e;n<t.length-e&&(a=String.fromCharCode(t[n]),"\n"!=a);n++)r+=a;return r}function i(t,e){let r=e.height;const a=e.width;let n,h,i,s,w,u=e.dataPosition;const f=new ArrayBuffer(e.width*e.height*4*3),l=new Float32Array(f);for(;r>0;){for(w=0;w<e.width;w++)n=t[u++],h=t[u++],i=t[u++],s=t[u++],o(l,n,h,i,s,(e.height-r)*a*3+3*w);r--}return l}n.FACE_LEFT=[new a.Pq(-1,-1,-1),new a.Pq(1,-1,-1),new a.Pq(-1,1,-1),new a.Pq(1,1,-1)],n.FACE_RIGHT=[new a.Pq(1,-1,1),new a.Pq(-1,-1,1),new a.Pq(1,1,1),new a.Pq(-1,1,1)],n.FACE_FRONT=[new a.Pq(1,-1,-1),new a.Pq(1,-1,1),new a.Pq(1,1,-1),new a.Pq(1,1,1)],n.FACE_BACK=[new a.Pq(-1,-1,1),new a.Pq(-1,-1,-1),new a.Pq(-1,1,1),new a.Pq(-1,1,-1)],n.FACE_DOWN=[new a.Pq(1,1,-1),new a.Pq(1,1,1),new a.Pq(-1,1,-1),new a.Pq(-1,1,1)],n.FACE_UP=[new a.Pq(-1,-1,-1),new a.Pq(-1,-1,1),new a.Pq(1,-1,-1),new a.Pq(1,-1,1)];class s{constructor(){this.supportCascades=!1}loadCubeData(){throw".env not supported in Cube."}loadData(t,e,r){const a=new Uint8Array(t.buffer,t.byteOffset,t.byteLength),n=function(t){let e=0,r=0,a=h(t,0);if("#"!=a[0]||"?"!=a[1])throw"Bad HDR Format.";let n=!1,o=!1,i=0;do{i+=a.length+1,a=h(t,i),"FORMAT=32-bit_rle_rgbe"==a?o=!0:0==a.length&&(n=!0)}while(!n);if(!o)throw"HDR Bad header format, unsupported FORMAT";i+=a.length+1,a=h(t,i);const s=/^-Y (.*) \+X (.*)$/g.exec(a);if(!s||s.length<3)throw"HDR Bad header format, no size";if(r=parseInt(s[2]),e=parseInt(s[1]),r<8||r>32767)throw"HDR Bad header format, unsupported size";return i+=a.length+1,{height:e,width:r,dataPosition:i}}(a),s=function(t,e){return function(t,e){let r=e.height;const a=e.width;let n,h,s,w,u,f=e.dataPosition,l=0,c=0,d=0;const C=new ArrayBuffer(4*a),p=new Uint8Array(C),P=new ArrayBuffer(e.width*e.height*4*3),m=new Float32Array(P);for(;r>0;){if(n=t[f++],h=t[f++],s=t[f++],w=t[f++],2!=n||2!=h||128&s||e.width<8||e.width>32767)return i(t,e);if((s<<8|w)!=a)throw"HDR Bad header format, wrong scan line width";for(l=0,d=0;d<4;d++)for(c=(d+1)*a;l<c;)if(n=t[f++],h=t[f++],n>128){if(u=n-128,0==u||u>c-l)throw"HDR Bad Format, bad scanline data (run)";for(;u-- >0;)p[l++]=h}else{if(u=n,0==u||u>c-l)throw"HDR Bad Format, bad scanline data (non-run)";if(p[l++]=h,--u>0)for(let e=0;e<u;e++)p[l++]=t[f++]}for(d=0;d<a;d++)n=p[d],h=p[d+a],s=p[d+2*a],w=p[d+3*a],o(m,n,h,s,w,(e.height-r)*a*3+3*d);r--}return m}(t,e)}(a,n),w=n.width*n.height,u=new Float32Array(4*w);for(let t=0;t<w;t+=1)u[4*t]=s[3*t],u[4*t+1]=s[3*t+1],u[4*t+2]=s[3*t+2],u[4*t+3]=1;r(n.width,n.height,e.generateMipMaps,!1,(()=>{const t=e.getEngine();e.type=1,e.format=5,e._gammaSpace=!1,t._uploadDataToTextureDirectly(e,u)}))}}}}]);